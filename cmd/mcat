#!/usr/node/bin/node

var mod_http = require('http');
var mod_path = require('path');

/*
 * mcat: emit a file by reference
 */
var mcUsageMessage = [
    'usage: mcat objectkey',
    '',
    'mcat emits the named Manta object as an output for the current task.  ',
    'This is analagous to cat(1), except that the inputs are Manta objects ',
    'instead of local files, and they\'re emitted as output of the task ',
    'instead of directly to stdout.',
    '',
    'This is useful for cases where the input to a task is an object which ',
    'itself contains a list of objects to be processed in the next phase,',
    'such as:',
    '',
    '    /dap/stor/data1.txt',
    '    /dap/stor/data2.txt',
    '    ...',
    '',
    'Using mcat, a task in phase N can emit these objects to phase N+1 ',
    'without actually having to download them first, by just invoking:',
    '',
    '    mcat /dap/stor/data1.txt',
    '    mcat /dap/stor/data2.txt',
    '    mcat ...',
    ''
].join('\n');

function main()
{
	if (process.argv.length < 3 || process.argv[2].length === 0) {
		console.error(mcUsageMessage);
		process.exit(2);
	}

	var uri = mod_path.join('/object', process.argv[2]);

	var request = mod_http.request({
	    'host': 'localhost',
	    'port': 8080,
	    'method': 'PUT',
	    'path': uri,
	    'headers': {
		'x-marlin-reference': true
	    }
	});

	request.end();

	request.on('response', function (response) {
		if (response.statusCode != 200) {
			console.error('server returned ' + response.statusCode);
			process.exit(1);
		}
	});
}

main();
