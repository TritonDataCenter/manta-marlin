#!/bin/bash

#
# mru: Marlin Upgrade: installs the Marlin agent and mock Manta services based
# on a given workspace's bits.  See usage below.
#

shopt -s xpg_echo

function fail
{
	echo "$@" >&2
	exit 1
}

function usage
{
	[[ $# -gt 0 ]] && echo "$*" >&2
	cat >&2 <<USAGE
usage: $(basename $0) prefix

Installs the Marlin agent and mock manta services based on the Marlin workspace
at "prefix".  If the services are already installed, removes them first.
USAGE
	exit 2
}

mru_svcs="marlin-agent marlin-mock-manta"
mru_manifests=""
mru_prefix=$1

#
# Validate input
#
[[ -n "$mru_prefix" ]] || usage
[[ -d "$mru_prefix" ]] || usage "not a directory: $mru_prefix"

cd $mru_prefix || fail "failed to cd to $mru_prefix"
mru_prefix=$PWD
cd - > /dev/null

echo "Marlin Upgrade from $mru_prefix"

for svc in $mru_svcs; do
	manifest="$mru_prefix/smf/manifests/$svc.xml"
	mru_manifests="$mru_manifests $manifest"

	echo "Checking for $manifest ... \c "
	[[ -f "$manifest" ]] || fail "manifest not found"
	echo "done."
done

#
# Remove existing services.
#
svcs -H -ofmri $mru_svcs 2>/dev/null | while read fmri; do
	echo "Disabling service $fmri ... \c "
	svcadm disable -s $fmri || fail "failed to disable $fmri"
	echo "done."

	echo "Removing service $fmri ... \c "
	svccfg delete $fmri || fail "failed to disable $fmri"
	echo "done."
done

#
# Add the new services.
#
for manifest in $mru_manifests; do
	tmpmanifest="/tmp/mru-$$-$(basename $manifest)"

	echo "Transforming $manifest ... \c "
	sed -e "s#@@PREFIX@@#$mru_prefix#g" $manifest > $tmpmanifest
	echo "done."

	echo "Importing $manifest ... \c "
	svccfg import $tmpmanifest || fail "failed"
	rm -f $tmpmanifest
	echo "done."
done
