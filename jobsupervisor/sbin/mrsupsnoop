#!/usr/sbin/dtrace -ZCs

/*
 * mrsupsnoop: snoop marlin supervisor activity
 *
 * This script may be invoked with -DOPS for verbose information about
 * asynchronous operations (auth requests, locate requests, and delete
 * requests).  It may also be invoked with -DJSON to print out full JSON
 * records.
 */

#pragma D option quiet

BEGIN
{
	printf("Snooping.\n");
	start = timestamp;
}

marlin-supervisor*:::job-assigned,
marlin-supervisor*:::job-input-done,
marlin-supervisor*:::job-done,
marlin-supervisor*:::job-inputs-read,
marlin-supervisor*:::job-mark-inputs-start,
marlin-supervisor*:::job-mark-inputs-done,
marlin-supervisor*:::worker-startup,
marlin-supervisor*:::worker-timeout,
marlin-supervisor*:::agent-timeout
{
	this->t = timestamp - start;
	printf("%5d.%03d  %-22s %s\n",
	    this->t / 1000000000, (this->t % 1000000000) / 1000000,
	    probename, copyinstr(arg0));
}

marlin-supervisor*:::task-dispatched,
marlin-supervisor*:::task-input-done,
marlin-supervisor*:::task-committed,
marlin-supervisor*:::taskinput-dispatched
{
	this->t = timestamp - start;
	this->jobid = copyinstr(arg0);
	this->jobid[8] = '\0';
	printf("%5d.%03d  %-22s %-8s %s\n",
	    this->t / 1000000000, (this->t % 1000000000) / 1000000,
	    probename, this->jobid, copyinstr(arg1));
}

marlin-supervisor*:::error-dispatched
{
	this->t = timestamp - start;
	this->jobid = copyinstr(arg0);
	this->jobid[8] = '\0';
	printf("%5d.%03d  %-22s %-8s %s\n",
	    this->t / 1000000000, (this->t % 1000000000) / 1000000,
	    probename, this->jobid, json(copyinstr(arg1), "errorCode"));
}

#ifdef OPS
marlin-supervisor*:::auth-start,
marlin-supervisor*:::locate-start,
marlin-supervisor*:::delete-start
{
	ops[strtok(probename, "-"), copyinstr(arg0)] = timestamp;
	this->t = timestamp - start;
	printf("%5d.%03d  %-22s %s\n",
	    this->t / 1000000000, (this->t % 1000000000) / 1000000,
	    probename, copyinstr(arg0));
}

marlin-supervisor*:::auth-done,
marlin-supervisor*:::locate-done,
marlin-supervisor*:::delete-done
/ops[strtok(probename, "-"), copyinstr(arg0)]/
{
	this->t = timestamp - start;
	this->t2 = timestamp - ops[strtok(probename, "-"), copyinstr(arg0)];
	this->e = copyinstr(arg1);
	printf("%5d.%03d  %-22s %s\n",
	    this->t / 1000000000, (this->t % 1000000000) / 1000000,
	    probename, copyinstr(arg0));
	printf("%9s  %-22s  %5dms\n", "",
	    this->e == "" ? "no error" : this->e,
	    this->t2 / 1000000);
	ops[strtok(probename, "-"), copyinstr(arg0)] = 0;
}
#endif

#ifdef JSON
marlin-supervisor*:::job-assigned,
marlin-supervisor*:::job-input-done,
marlin-supervisor*:::job-done,
marlin-supervisor*:::error-dispatched
{
	printf("%s\n", copyinstr(arg1));
}

marlin-supervisor*:::task-dispatched,
marlin-supervisor*:::task-input-done,
marlin-supervisor*:::task-committed,
marlin-supervisor*:::taskinput-dispatched
{
	printf("%s\n", copyinstr(arg2));
}
#endif
